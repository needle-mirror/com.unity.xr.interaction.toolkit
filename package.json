{
  "name": "com.unity.xr.interaction.toolkit",
  "displayName": "XR Interaction Toolkit",
  "version": "3.4.0-pre.1",
  "unity": "2021.3",
  "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
  "keywords": [
    "XR",
    "VR",
    "toolkit",
    "interaction"
  ],
  "category": "XR",
  "dependencies": {
    "com.unity.inputsystem": "1.8.1",
    "com.unity.mathematics": "1.2.6",
    "com.unity.ugui": "1.0.0",
    "com.unity.xr.core-utils": "2.4.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.imgui": "1.0.0",
    "com.unity.modules.physics": "1.0.0",
    "com.unity.modules.xr": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Starter Assets",
      "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System. Also contains a demo scene.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>",
      "path": "Samples~/Starter Assets"
    },
    {
      "displayName": "Hands Interaction Demo",
      "description": "Demo scene and other assets for hand-tracking integration with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.hands\">XR Hands</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>\n • Starter Assets sample",
      "path": "Samples~/Hands Interaction Demo"
    },
    {
      "displayName": "AR Starter Assets",
      "description": "Assets to streamline setup when building for Mobile AR or Mixed Reality with the XR Interaction Toolkit. This includes prefabs and a demo scene to get you started.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.arfoundation\">AR Foundation</a>\n • Starter Assets sample",
      "path": "Samples~/AR Starter Assets"
    },
    {
      "displayName": "XR Interaction Simulator",
      "description": "Assets related to the simulation of input for XR headsets, controllers, and hands.",
      "path": "Samples~/XR Interaction Simulator"
    },
    {
      "displayName": "XR Device Simulator",
      "description": "(Legacy) Assets related to the simulation of input for XR headsets, controllers, and hands. This is the older \"classic\" version of the simulator that existed before the XR Interaction Simulator sample was introduced and lacks many of the newer features.",
      "path": "Samples~/XR Device Simulator"
    },
    {
      "displayName": "Spatial Keyboard",
      "description": "Virtual spatial keyboard to allow for text entry in a world space UI. This interactable keyboard can be used in your app instead of the platform's system keyboard.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.textmeshpro\">TextMeshPro</a>\n • Starter Assets sample",
      "path": "Samples~/Spatial Keyboard"
    },
    {
      "displayName": "World Space UI",
      "description": "This sample provides a demo scene and prefabs demonstrating how to leverage UI Toolkit and UGUI in world space in conjunction with the XR Interaction Toolkit. \n<i>Dependencies:</i>\n • Starter Assets sample\n • Hands Interaction Demo sample\n • Unity 6.2 or newer (minimum 6000.2.0a9)",
      "path": "Samples~/World Space UI"
    },
    {
      "displayName": "Legacy XR Input Readers",
      "description": "This sample provides ScriptableObjects to assist with migration from the older device-based controller input to be used with the new input readers introduced with version 3.0.0.",
      "path": "Samples~/Legacy XR Input Readers"
    },
    {
      "displayName": "visionOS",
      "description": "This sample provides a demo scene and prefabs designed to to help you get started developing on visionOS with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.arfoundation\">AR Foundation</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.polyspatial.visionos\">PolySpatial visionOS</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.polyspatial.xr\">PolySpatial XR</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>\n • Starter Assets sample\n • Unity 2022.3 LTS or newer (minimum 2022.3.19f1)",
      "path": "Samples~/visionOS"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Added a 10-key number pad prefab to the Spatial Keyboard sample.\n- Added column for the XR Interaction Group the interactor is a member of to the XR Interaction Debugger window.\n- Added Hierarchy Path column to the XR Interaction Debugger window to show the full scene hierarchy path of the object. This column is hidden by default and can be shown by right-clicking the column header list and selecting it from the context menu.\n- Added additional tab to the XR Interaction Debugger window to show registered XR Interactable Snap Volumes.\n- Added `managerDestroyed` property to the unregistered event args to let registered components know it was due to the XR Interaction Manager being destroyed.\n- Added new methods to `XRInteractionManager` to query whether a snap volume is registered and to get a list of registered snap volumes.\n- Added new methods and events to `XRInteractableSnapVolume` and `XRInteractionManager` for snap volume registration.\n\n### Changed\n- Changed interaction components that need to find the `XRInteractionManager` and/or the `XRUIInputModule` on the `EventSystem` to try finding them in all scenes that started being loaded at the time of search to allow for more flexibility in projects with multiple scenes. The default manager and input module will only be automatically created once all scenes finish loading.\n- Changed the XR Interaction Manager component so it cancels all hovers and selections and unregisters everything when that component is destroyed. The components that were registered with the destroyed manager will automatically be re-registered with another manager, either an active and enabled one in the scene or the next one to be enabled.\n- Changed interaction components so they prioritize an enabled manager when there are multiple managers in the scene when initializing an unset Interaction Manager property reference.\n- Changed the **GameObject** &gt; **XR** menu items to no longer create an XR Interaction Manager GameObject automatically.\n- Changed the XR Interaction Debugger window to grey out disabled XR Interaction Managers instead of hiding them.\n- Changed some scripts to add `MonoBehaviour` event method implementations. Users who had already implemented either method in derived classes will need to call the base method.\n  - Changed [`XRInteractionManager`](xref:UnityEngine.XR.Interaction.Toolkit.XRInteractionManager) by adding the `OnDestroy` method.\n  - Changed [`XRInputModalityManager`](xref:UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager) by adding `Awake` and `OnDestroy` methods.\n- Changed the sample assets folders for the demo scenes in AR Starter Assets, Hands Interaction Demo, and Starter Assets package samples by renaming the folders to `DemoAssets` to help with naming consistency.\n\n### Fixed\n- Fixed an issue with the `JumpProvider` continually being stuck in the `LocomotionState.Moving` state and never entering the `LocomotionState.Ended` state.\n- Fixed the **GameObject** &gt; **XR** &gt; **Interaction Manager** menu item so it does not delete the GameObject upon Undo when the GameObject already existed.\n- Fixed exception when Valid Target objects are destroyed when the XR Interaction Debugger window is open."
  },
  "upmCi": {
    "footprint": "48a9554ee4fcbf2bae3a20dcf9533cc1e60ebc7b"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@3.4/manual/index.html",
  "repository": {
    "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
    "type": "git",
    "revision": "00792aa5f06d353bca5a831faced7c4045d48081"
  }
}
