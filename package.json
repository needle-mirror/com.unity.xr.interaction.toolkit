{
  "name": "com.unity.xr.interaction.toolkit",
  "displayName": "XR Interaction Toolkit",
  "version": "3.0.8",
  "unity": "2021.3",
  "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
  "keywords": [
    "XR",
    "VR",
    "toolkit",
    "interaction"
  ],
  "category": "XR",
  "dependencies": {
    "com.unity.inputsystem": "1.8.1",
    "com.unity.mathematics": "1.2.6",
    "com.unity.ugui": "1.0.0",
    "com.unity.xr.core-utils": "2.2.3",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.imgui": "1.0.0",
    "com.unity.modules.physics": "1.0.0",
    "com.unity.modules.xr": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Starter Assets",
      "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System. Also contains a demo scene.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>",
      "path": "Samples~/Starter Assets"
    },
    {
      "displayName": "Hands Interaction Demo",
      "description": "Demo scene and other assets for hand-tracking integration with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.hands\">XR Hands</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>\n • Starter Assets sample",
      "path": "Samples~/Hands Interaction Demo"
    },
    {
      "displayName": "AR Starter Assets",
      "description": "Assets to streamline setup when building for Mobile AR or Mixed Reality with the XR Interaction Toolkit. This includes prefabs and a demo scene to get you started.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.arfoundation\">AR Foundation</a>\n • Starter Assets sample",
      "path": "Samples~/AR Starter Assets"
    },
    {
      "displayName": "XR Device Simulator",
      "description": "Assets related to the simulation of XR HMD and controllers.",
      "path": "Samples~/XR Device Simulator"
    },
    {
      "displayName": "Spatial Keyboard",
      "description": "Virtual spatial keyboard to allow for text entry in a world space UI. This interactable keyboard can be used in your app instead of the platform's system keyboard.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.textmeshpro\">TextMeshPro</a>\n • Starter Assets sample",
      "path": "Samples~/Spatial Keyboard"
    },
    {
      "displayName": "Legacy XR Input Readers",
      "description": "This sample provides ScriptableObjects to assist with migration from the older device-based controller input to be used with the new input readers introduced with version 3.0.0.",
      "path": "Samples~/Legacy XR Input Readers"
    },
    {
      "displayName": "visionOS",
      "description": "This sample provides a demo scene and prefabs designed to to help you get started developing on visionOS with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.arfoundation\">AR Foundation</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.polyspatial.visionos\">PolySpatial visionOS</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.polyspatial.xr\">PolySpatial XR</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>\n • Starter Assets sample\n • Unity 2022.3 LTS or newer (minimum 2022.3.19f1)",
      "path": "Samples~/visionOS"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Added a Drag Start Position Input property to the Screen Space Ray Pose Driver component to improve the ability to select a dragged object in AR projects. The ray will be initially cast from the touch start position instead of the current drag position when the drag gesture starts in order to improve the ability to pick small objects. (Backport from 3.1.0)\n- Added a Tap Duration property to the Touchscreen Gesture Input Loader component to configure the threshold that a touch and release must occur within for a tap gesture. (Backport from 3.1.0)\n\n### Changed\n- Changed scripts to improve performance of processing interaction strength (tagged `XRI.ProcessInteractionStrength` in Profiler). (Backport from 3.1.0-pre.1)\n- Changed the tap cancel duration from 0.3 seconds to 0.5 seconds on the `TouchscreenGestureInputController` input device created by the Touchscreen Gesture Input Loader component. This affects the `Screen Space Ray Interactor` prefab in the AR Starter Assets sample. This should make selecting objects more forgiving with a slower tap. ([XRIT-208](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-208)) (Backport from 3.1.0)\n- Changed the Max Tap Duration on the Tap interactions from the default Input System (0.2 seconds) to 0.5 seconds on the mouse bindings in both the Tap Start Position and Spawn Object input actions. This should make selecting and spawning objects more forgiving with a slower tap when using the mouse when simulating in the Unity Editor. ([XRIT-208](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-208)) (Backport from 3.1.0)\n- Changed Spawn Trigger Type from Select Attempt to Input Action on the AR Interactor Spawn Trigger component in the `Screen Space Ray Interactor` prefab in the AR Starter Assets sample. Changed the binding in the Spawn Object input action to use the tap gesture in the `TouchscreenGestureInputController` input device instead of the generic `<Touchscreen>/Press` binding with the Tap interaction so that spawning uses consistent tap cancel logic as selection taps. (Backport from 3.1.0)\n- Changed Min Scale from 0.05 to 0.2 on the AR Transformer component on each of the spawning objects in the `ARDemoScene`. (Backport from 3.1.0)\n- Changed `RigidBody.Interpolate` to `None` for interactables in the `HandsDemoScene` to fix interactable position issues when the table is moved. (Backport from 3.1.0)\n- Changed `XRRayInteractor.TryGetHitInfo` to return the hit info of the selected interactable or highest scored interactable instead of the nearest raycast hit. ([XRIT-141](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-141)) (Backport from 3.1.0)\n\n### Fixed\n- Fixed `BaseAffordanceStateProvider` so it passes the previous `AffordanceStateData` to custom affordance state receivers. (Backport from 3.1.0-pre.1)\n- Fixed an issue with the `XRPokeInteractor` that would attempt to register a valid target for each collider that was poked for a single interactable. ([XRIT-209](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-209)) (Backport from 3.1.0)\n- Fixed the AR Interactor Spawn Trigger component in the AR Starter Assets sample to avoid spawning a new object when tapping to select an existing object caused by the Spawn Object and Select inputs using different binding sources that have a frame delay. (Backport from 3.1.0)\n- Fixed missing tooltip on the Sphere Interaction Caster component for the Physics Trigger Interaction property. Updated all related tooltips and documentation to clarify that Use Global refers to the Queries Hit Triggers setting in Edit &gt; Project Settings &gt; Physics. (Backport from 3.1.0)\n- Fixed compilation issue in `OpenXRHapticImpulseChannel` related to `OpenXRInput.GetActionHandle` when OpenXR Plugin package version 1.6.0 is installed. (Backport from 3.1.0)\n- Fixed issue with input field caret position when using mouse and keyboard input on `XRKeyboardDisplay` input fields. Users will need to reimport the Spatial Keyboard sample to get the updated component script. ([XRIT-230](https://issuetrac"
  },
  "upmCi": {
    "footprint": "c746d14896ef72d98cd3ad7e1c641a593acaf21b"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@3.0/manual/index.html",
  "repository": {
    "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
    "type": "git",
    "revision": "31b5fd0c207765ee920931e5d92b837d3a46e35e"
  }
}
