{
  "name": "com.unity.xr.interaction.toolkit",
  "displayName": "XR Interaction Toolkit",
  "version": "3.2.0-pre.1",
  "unity": "2021.3",
  "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
  "keywords": [
    "XR",
    "VR",
    "toolkit",
    "interaction"
  ],
  "category": "XR",
  "dependencies": {
    "com.unity.inputsystem": "1.8.1",
    "com.unity.mathematics": "1.2.6",
    "com.unity.ugui": "1.0.0",
    "com.unity.xr.core-utils": "2.4.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.imgui": "1.0.0",
    "com.unity.modules.physics": "1.0.0",
    "com.unity.modules.xr": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Starter Assets",
      "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System. Also contains a demo scene.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>",
      "path": "Samples~/Starter Assets"
    },
    {
      "displayName": "Hands Interaction Demo",
      "description": "Demo scene and other assets for hand-tracking integration with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.hands\">XR Hands</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>\n • Starter Assets sample",
      "path": "Samples~/Hands Interaction Demo"
    },
    {
      "displayName": "AR Starter Assets",
      "description": "Assets to streamline setup when building for Mobile AR or Mixed Reality with the XR Interaction Toolkit. This includes prefabs and a demo scene to get you started.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.arfoundation\">AR Foundation</a>\n • Starter Assets sample",
      "path": "Samples~/AR Starter Assets"
    },
    {
      "displayName": "XR Interaction Simulator",
      "description": "Assets related to the simulation of XR HMD, controllers and interaction.",
      "path": "Samples~/XR Interaction Simulator"
    },
    {
      "displayName": "XR Device Simulator",
      "description": "(Legacy) Assets related to the simulation of XR HMD and controllers.",
      "path": "Samples~/XR Device Simulator"
    },
    {
      "displayName": "Spatial Keyboard",
      "description": "Virtual spatial keyboard to allow for text entry in a world space UI. This interactable keyboard can be used in your app instead of the platform's system keyboard.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.textmeshpro\">TextMeshPro</a>\n • Starter Assets sample",
      "path": "Samples~/Spatial Keyboard"
    },
    {
      "displayName": "World Space UI",
      "description": "This sample provides a demo scene and prefabs demonstrating how to leverage UI Toolkit and UGUI in world space in conjunction with the XR Interaction Toolkit. \n<i>Dependencies:</i>\n • Starter Assets sample\n • Hands Interaction Demo sample\n • Unity 6.2 or newer (minimum 6000.2.0a9)",
      "path": "Samples~/World Space UI"
    },
    {
      "displayName": "Legacy XR Input Readers",
      "description": "This sample provides ScriptableObjects to assist with migration from the older device-based controller input to be used with the new input readers introduced with version 3.0.0.",
      "path": "Samples~/Legacy XR Input Readers"
    },
    {
      "displayName": "visionOS",
      "description": "This sample provides a demo scene and prefabs designed to to help you get started developing on visionOS with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.arfoundation\">AR Foundation</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.polyspatial.visionos\">PolySpatial visionOS</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.polyspatial.xr\">PolySpatial XR</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>\n • Starter Assets sample\n • Unity 2022.3 LTS or newer (minimum 2022.3.19f1)",
      "path": "Samples~/visionOS"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Added Click UI On Down property to the XR Poke Interactor and added support to trigger UI click event on down instead of release for buttons, toggles, input fields, and dropdowns.\n- Added `ToggleColorToggler` sample script to use on/off color properties when a `Toggle` is pressed instead of toggling graphic elements on and off like the previous `ToggleGraphicToggler`.\n- Added support to the XR Grab Interactable to smooth the appearance of the object in a similar way to Rigidbody Interpolation but without the frame delay. For more information about this feature, see [What's new in 3.2](xref:xri-whats-new-3-2).\n  - Added a new Predicted Visuals Transform property to XR Grab Interactable that allows you to define a separate visual hierarchy of child GameObjects that can be driven at the application's update rate while still only moving the Rigidbody during `FixedUpdate`. This new optional property only applies when the Movement Type is Kinematic or Velocity Tracking.\n- Added support to limit the linear velocity and angular velocity of the XR Grab Interactable when the Movement Type is Velocity Tracking. This can be used to improve stability as the object collides with static geometry as it follows the interactor. These are controlled by four new properties: Limit Linear Velocity, Max Linear Velocity Delta, Limit Angular Velocity, and Max Angular Velocity Delta.\n- Added pre-release support for UI Toolkit interaction for world-space based UI documents. The additions are currently marked as internal while we gain feedback and stabilize the feature. This feature is only supported on Unity 6.2 and higher where world-space support for UI Toolkit was added.\n\n### Changed\n- Changed `Poke Interactor` prefab and components in the Starter Assets and Hand Interaction Demo samples to enable Click UI On Down for poke.\n- Replaced `ToggleGraphicToggler` from Hands Interaction Demo sample with `ToggleColorToggler` in the Starter Assets sample.\n- Changed how XR Grab Interactables are created when using the **GameObject** &gt; **XR** &gt; **Grab Interactable** menu item. When created this way, the Mesh Renderer component is now created on a child GameObject and assigned as the Predicted Visuals Transform. The Box Collider component is also now created on a child GameObject. The Reset operation on XR Grab Interactable will also automatically try to assign the Predicted Visuals Transform to a child GameObject that contains a Mesh Renderer or Skinned Mesh Renderer.\n- Changed `XRPokeFilter` so references can be reconfigured at runtime and to avoid immediately warning when adding the component to a GameObject without the other components added yet.\n- Changed `CurveVisualController` so it updates the `LineRenderer` during the Before Render (`Application.onBeforeRender`) phase instead of `LateUpdate`. This fixes the line origin so it is based on the latest tracking pose, which keeps it connected to the controller model visually.\n- Changed `CurveVisualController` by adding the `OnEnable` and `OnDisable` methods. Users who had already implemented either method in derived classes will need to call the base method.\n- Changed `XRGrabInteractable` by adding the `OnCollisionStay` method. Users who had already implemented this method in derived classes will need to call the base method.\n- Moved the XR Interaction Simulator folder out of the XR Device Simulator samples and into its own sample for greater visibility.\n\n### Deprecated\n- Methods that reference Input Manager Touch in the AR Gesture classes have been marked for deprecation. The recommended way of using those gesture classes is to use `InputSystem.EnhancedTouch.Touch` instead. The scripting define symbol `XRI_LEGACY_INPUT_DISABLED` can be added to Edit &gt; Project Settings &gt; Player to disable all use of `UnityEngine.Touch` in the package.\n\n### Fixed\n- Fixed `TrackedDeviceGraphicRaycaster` to update raycaster to interactor reference based on sorting order.\n- Fixed a version handling routine in the Project Validation Utility for sample version caching. Other Unity sample packages somet"
  },
  "upmCi": {
    "footprint": "59d0ebd45450feb1859a7df314249a5961658590"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@3.2/manual/index.html",
  "repository": {
    "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
    "type": "git",
    "revision": "0773c43df440de9bb859e6ae04cde5053bab9d11"
  }
}
