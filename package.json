{
  "name": "com.unity.xr.interaction.toolkit",
  "displayName": "XR Interaction Toolkit",
  "version": "3.2.0",
  "unity": "2021.3",
  "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
  "keywords": [
    "XR",
    "VR",
    "toolkit",
    "interaction"
  ],
  "category": "XR",
  "dependencies": {
    "com.unity.inputsystem": "1.8.1",
    "com.unity.mathematics": "1.2.6",
    "com.unity.ugui": "1.0.0",
    "com.unity.xr.core-utils": "2.4.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.imgui": "1.0.0",
    "com.unity.modules.physics": "1.0.0",
    "com.unity.modules.xr": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Starter Assets",
      "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System. Also contains a demo scene.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>",
      "path": "Samples~/Starter Assets"
    },
    {
      "displayName": "Hands Interaction Demo",
      "description": "Demo scene and other assets for hand-tracking integration with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.hands\">XR Hands</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>\n • Starter Assets sample",
      "path": "Samples~/Hands Interaction Demo"
    },
    {
      "displayName": "AR Starter Assets",
      "description": "Assets to streamline setup when building for Mobile AR or Mixed Reality with the XR Interaction Toolkit. This includes prefabs and a demo scene to get you started.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.arfoundation\">AR Foundation</a>\n • Starter Assets sample",
      "path": "Samples~/AR Starter Assets"
    },
    {
      "displayName": "XR Interaction Simulator",
      "description": "Assets related to the simulation of XR HMD, controllers and interaction.",
      "path": "Samples~/XR Interaction Simulator"
    },
    {
      "displayName": "XR Device Simulator",
      "description": "(Legacy) Assets related to the simulation of XR HMD and controllers.",
      "path": "Samples~/XR Device Simulator"
    },
    {
      "displayName": "Spatial Keyboard",
      "description": "Virtual spatial keyboard to allow for text entry in a world space UI. This interactable keyboard can be used in your app instead of the platform's system keyboard.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.textmeshpro\">TextMeshPro</a>\n • Starter Assets sample",
      "path": "Samples~/Spatial Keyboard"
    },
    {
      "displayName": "World Space UI",
      "description": "This sample provides a demo scene and prefabs demonstrating how to leverage UI Toolkit and UGUI in world space in conjunction with the XR Interaction Toolkit. \n<i>Dependencies:</i>\n • Starter Assets sample\n • Hands Interaction Demo sample\n • Unity 6.2 or newer (minimum 6000.2.0a9)",
      "path": "Samples~/World Space UI"
    },
    {
      "displayName": "Legacy XR Input Readers",
      "description": "This sample provides ScriptableObjects to assist with migration from the older device-based controller input to be used with the new input readers introduced with version 3.0.0.",
      "path": "Samples~/Legacy XR Input Readers"
    },
    {
      "displayName": "visionOS",
      "description": "This sample provides a demo scene and prefabs designed to to help you get started developing on visionOS with the XR Interaction Toolkit.\n<i>Dependencies:</i>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.xr.arfoundation\">AR Foundation</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.polyspatial.visionos\">PolySpatial visionOS</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.polyspatial.xr\">PolySpatial XR</a>\n • <a href=\"com.unity3d.kharma:upmpackage/com.unity.shadergraph\">Shader Graph</a>\n • Starter Assets sample\n • Unity 2022.3 LTS or newer (minimum 2022.3.19f1)",
      "path": "Samples~/visionOS"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Added additional Editor analytics to gather data about locomotion components that helps Unity understand how the package is being used in projects. If you don't want to send data to Unity, please see [Editor analytics documentation](https://docs.unity3d.com/Manual/EditorAnalytics.html) for how to disable analytics in your project.\n- Added configurable functionality to `ARContactSpawnTrigger` in the AR Starter Assets sample to block spawning of objects on AR Planes when the active interactor in the associated `XRInteractionGroup` is either hovering or selecting an interactable object.\n- Added documentation for [World-Space UI Toolkit support](xref:xri-ui-world-space-ui-toolkit-support) and the [World Space UI sample package](xref:xri-samples-world-space-ui).\n\n### Changed\n- Changed the timing of when several locomotion events and methods are called within a frame. The primary motivation of these changes is to allow the `LocomotionProvider.locomotionEnded` event to invoke after a teleport has actually been applied to the XR Origin rather than after the transformation has merely been queued but not yet applied. This restores similar timing to that event as the deprecated `LocomotionProvider.endLocomotion` when the deprecated `LocomotionSystem` was used, fixing a regression introduced with version [3.0.0-pre.1](#300-pre1---2023-12-14). ([XRIT-255](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-255))\n  - Added `LocomotionProvider.locomotionStateChanged` event and `OnLocomotionStateChanging` method to allow users to respond to the changing `locomotionState` before any queued transformations have been applied.\n  - Added `LocomotionProvider.afterStepLocomotion` event which is invoked after a provider's queued transformation has been applied.\n  - Added `XRBodyTransformer.afterApplyTransformations` event which is invoked after all transformations have been applied in a frame.\n  - Changed `XRBodyTransformer.beforeApplyTransformations` so it is only invoked during a frame when a transformation is about to be applied rather than always being invoked every frame even if nothing had been queued.\n  - Changed `LocomotionProvider.locomotionEnded` event and `OnLocomotionEnding` method so it is invoked after any of the provider's queued transformations have been applied rather than immediately after changing `locomotionState` to `LocomotionState.Ended`.\n  - Changed `LocomotionProvider` so the `OnLocomotionEnding` method is invoked before the `locomotionEnded` event, matching the pattern elsewhere in the package of the `protected virtual` method being invoked before the `public` event.\n  - Fixed `LocomotionProvider.beforeStepLocomotion` so it is invoked as expected when a locomotion component (such as Snap Turn Provider) has a Delay Time.\n  - Fixed XR Grab Interactable being thrown at very high velocities after a teleportation due to the change in `LocomotionProvider.locomotionEnded` event timing.\n- Changed the Transformation Priority value on some Locomotion Provider components in the XR Origin (XR Rig) prefab in the Starter Assets sample to improve the default ordering when multiple providers are doing locomotion in the same frame.\n  - Changed Gravity Provider from 0 to 10 to make it more apparent that its transformations are applied after non-teleport locomotion. Due to script execution order, this was already the case.\n  - Changed Teleportation Provider from 0 to 20 so that its transformations are applied last among all the providers in the rig. This is to allow the rig to move and rotate to the exact pose previewed by the teleport reticle. Due to script execution order, it was previously indeterminate if it applied before or after move/turn locomotion.\n- Changed XR Grab Interactable so snap turn and turn around are handled the same as a teleportation when calculating the throw velocity. This fixes the object being thrown at unintentionally high velocity when dropped immediately after a snap turn or turn around.\n- Changed XR Grab Interactable so it also updates the Predicted Visuals Transform scale between phy"
  },
  "upmCi": {
    "footprint": "a1236603f3331ad291b151505d817d6170e0327b"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@3.2/manual/index.html",
  "repository": {
    "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
    "type": "git",
    "revision": "df04da2f53f9fb1d81ca20ef5446c3095a4b49d0"
  }
}
